package com.jotsamikael.applycam.promoter;

import java.time.LocalDate;

import org.springframework.web.multipart.MultipartFile;

import com.jotsamikael.applycam.trainingCenter.CreateTainingCenterRequest;

import jakarta.validation.Valid;
import jakarta.validation.constraints.NotBlank;
import jakarta.validation.constraints.NotNull;
import lombok.Builder;
import lombok.Getter;
import lombok.Setter;

@Getter
@Setter
@Builder
public class CreatePromoterAndCenterRequest {
	
	 	@NotBlank(message = "Le prénom est requis")
	    private String firstname;

	    @NotBlank(message = "Le nom est requis")
	    private String lastname;

	    @NotBlank(message = "L'email est requis")
	    @Email(message = "L'email n'est pas valide")
	    private String email;

	    @NotBlank(message = "Le numéro de téléphone est requis")
	    private String phoneNumber;

	    @NotBlank(message = "Le numéro de CNI est requis")
	    private String nationalIdNumber;

	    @NotBlank(message = "Le niveau scolaire est requis")
	    private String schoolLevel;

	    @NotBlank(message = "La date de naissance est requise")
	    private String dateOfBirth;

	    @NotBlank(message = "L'adresse est requise")
	    private String address;

	    @NotBlank(message = "Le sexe est requis")
	    private String sex;

	    @NotBlank(message = "Le mot de passe est requis")
	    private String password;

	    // ==== Champs Centre de formation ====
	    @NotBlank(message = "Le nom complet du centre est requis")
	    private String fullName;

	    @NotBlank(message = "L'acronyme est requis")
	    private String acronym;

	    @NotNull(message = "La date de début de l'agrément est requise")
	    private LocalDate startDateOfAgreement;

	    @NotNull(message = "La date de fin de l'agrément est requise")
	 
	    private LocalDate endDateOfAgreement;

	    @NotBlank(message = "La division est requise")
	    private String division;

	    @NotBlank(message = "L'adresse complète du centre est requise")
	    private String fullAddress;

	    @NotNull(message = "Le statut CQP est requis")
	    private Boolean isCenterPresentCandidateForCqp;

	    @NotNull(message = "Le statut DQP est requis")
	    private Boolean isCenterPresentCandidateForDqp;

	    
	    private MultipartFile nationalIdCard;
	    
	    private MultipartFile agreementFile;
	    
	    private MultipartFile promoterPhoto;
	    
	    private MultipartFile signLetter;
	    
	    private MultipartFile localisationFile;
	    
	    private MultipartFile internalRegulation;
	    
	    private LocalDate validUntil;
	    
	    private LocalDate validFrom;
	    
	    private LocalDate validTo; 
	    
	    
	    @NotBlank(message = "Le numéro d'agrément est requis")
	    private String agreementNumber;
	
//DTO Global to sum up the two request to create a promoter while creating a training center
}
