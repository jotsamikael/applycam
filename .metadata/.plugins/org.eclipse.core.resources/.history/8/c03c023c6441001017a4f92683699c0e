package com.jotsamikael.applycam.promoter;

import java.time.LocalDate;

import org.springframework.web.multipart.MultipartFile;

import com.jotsamikael.applycam.trainingCenter.CreateTainingCenterRequest;

import jakarta.validation.Valid;
import jakarta.validation.constraints.Email;
import jakarta.validation.constraints.NotBlank;
import jakarta.validation.constraints.NotNull;
import lombok.Builder;
import lombok.Getter;
import lombok.Setter;

@Getter
@Setter
@Builder
public class CreatePromoterAndCenterRequest {
	
	 	@NotBlank(message = "Le prénom est requis")
	    private String firstName;

	    @NotBlank(message = "Le nom est requis")
	    private String lastName;

	    @NotBlank(message = "L'email est requis")
	    @Email(message = "L'email n'est pas valide")
	    private String email;

	    @NotBlank(message = "Le numéro de téléphone est requis")
	    private String phone;
	    
	    @NotBlank(message = "La nationalite est requis")
	    private String nationality;
	    
	    

	    @NotBlank(message = "Le numéro de CNI est requis")
	    private String cniNumber;

	    @NotBlank(message = "La profession est requis")
	    private String profession;

	    @NotBlank(message = "La date de naissance est requise")
	    private String birthDate;

	    @NotBlank(message = "reidence City est requise")
	    private String residenceCity;

	    @NotBlank(message = "Le sexe est requis")
	    private String gender;

	    @NotBlank(message = "Le mot de passe est requis")
	    private String password;
	    
	    @NotBlank(message = "Le mot de passe de confirmation est requis")
	    private String confirmPassword;
	    

	    // ==== Champs Centre de formation ====
	    @NotBlank(message = "Le nom complet du centre est requis")
	    private String centerName;

	    @NotBlank(message = "L'acronyme est requis")
	    private String centerAcronym;
	    

	    @NotBlank(message = "Le type de centre est requis")
	    private String centerType;
	    

	    @NotBlank(message = "Le numero du centre de formation est requis")
	    private String centerPhone;
	    

	    @NotBlank(message = "L'email du centre est requis")
	    @Email(message = "L'email n'est pas valide")
	    private String centerEmail;
	    
	    @NotBlank(message = "L'url du site du centre est requise")
	    private String website;

	  /*  @NotNull(message = "La date de début de l'agrément est requise")
	    private LocalDate startDateOfAgreement;

	    @NotNull(message = "La date de fin de l'agrément est requise")
	    private LocalDate endDateOfAgreement; */

	    
	    @NotBlank(message = "Le departement est requise")
	    private String departement;
	    
	    @NotBlank(message = "La ville du centre est requise")
	    private String city;

	    @NotBlank(message = "La region est requise")
	    private String region;

	    @NotBlank(message = "L'adresse complète du centre est requise")
	    private String fullAddress;

	    @NotNull(message = "Le statut CQP est requis")
	    private Boolean isCenterPresentCandidateForCqp;

	    @NotNull(message = "Le statut DQP est requis")
	    private Boolean isCenterPresentCandidateForDqp;

	    
	    private MultipartFile cniFile;
	    
	    private MultipartFile approvalFile;
	    
	    private MultipartFile promoterPhoto;
	    
	    private MultipartFile engagementLetter;
	    
	    private MultipartFile locationPlan;
	    
	    private MultipartFile internalRegulation;
	    
	    @NotNull(message = "La date de validité de la CNI est requise")
	    private LocalDate cniValidUntil;
	    
	    @NotNull(message = "La date de début de validité de l'agrément est requise")
	    private LocalDate approvalStart;
	    
	    @NotNull(message = "La date de fin de validité de l'agrément est requise")
	    private LocalDate approvalEnd; 
	    
	    
	    @NotBlank(message = "Le numéro d'agrément est requis")
	    private String approvalNumber;
	
//DTO Global to sum up the two request to create a promoter while creating a training center
}
